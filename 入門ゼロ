以下は、**Git Bashで初めて作業する新人エンジニア向けに、`cd` や `ls` などの基本コマンドを丁寧に解説したチートシート**です。
Linuxコマンドの基本を、**Windows環境での実務使用前提**で、**実行例つきで理解できる構成**になっています。

---

# 🐣 新人エンジニア向け Git Bash コマンド超入門

## 〜 `cd`, `ls`, `pwd` などの基本操作を丁寧に解説 〜

---

## 💻 Git Bashって何？

Git Bash は、**Windowsで使えるLinux風のコマンドラインツール**です。
Gitの操作だけでなく、**ファイル移動やディレクトリ確認**などの基本操作もここから行います。

---

## 📁 基本コマンド一覧（ディレクトリ・ファイル操作）

| コマンド     | 読み方             | 意味・用途                      | 例                   | 結果・補足                                 |
| -------- | --------------- | -------------------------- | ------------------- | ------------------------------------- |
| `pwd`    | ピーダブリュー・ディー     | 今いる場所（パス）を表示               | `pwd`               | `/c/Users/username` などが出る（カレントディレクトリ） |
| `ls`     | エル・エス           | 今いる場所にあるファイル・フォルダ一覧を表示     | `ls`                | `Desktop/ Documents/ project/` など     |
| `ls -la` | エル・エス　マイナス　エルエー | 隠しファイルも含めて詳細表示             | `ls -la`            | `.git/` や `.env` なども見える               |
| `cd`     | シーディー           | ディレクトリ移動（change directory） | `cd project`        | 「project」フォルダに移動                      |
| `cd ..`  | シーディー　ドットドット    | 一つ上の階層に移動                  | `cd ..`             | 親フォルダへ戻る                              |
| `cd ~`   | シーディー チルダ       | ホームディレクトリに戻る               | `cd ~`              | `/c/Users/あなたの名前/` へ戻る                |
| `clear`  | クリア             | 画面をきれいにする（履歴を消す）           | `clear`             | 画面がスッキリします                            |
| `touch`  | タッチ             | 空のファイルを作成する                | `touch sample.txt`  | sample.txt を現在のフォルダに作成                |
| `mkdir`  | エムケー・ディーアイアール   | 新しいフォルダ（ディレクトリ）を作成         | `mkdir test_folder` | 「test_folder」フォルダができる                 |

---

## 🧭 よくあるパスの指定例（Windowsでの注意）

| やりたいこと    | コマンド例               | 補足                             |
| --------- | ------------------- | ------------------------------ |
| デスクトップに移動 | `cd ~/Desktop`      | `~` はホームフォルダを意味します             |
| Dドライブに移動  | `cd /d/DIR_NAME`    | Git Bashでは「/d/」のように `/` で区切ります |
| スペースがあるパス | `cd "My Documents"` | ダブルクォートで囲む                     |

---

## 🔁 状況別コマンド実行の流れ（例：プロジェクト移動）

### 🌱 例）プロジェクトフォルダに移動して中身を確認

```bash
cd ~/Desktop
ls
cd my_project
ls -la
```

**結果解説：**

* `cd ~/Desktop`：デスクトップに移動
* `ls`：フォルダ一覧を表示（例：my_project）
* `cd my_project`：プロジェクトフォルダに移動
* `ls -la`：隠しファイル（.gitなど）も確認できる

---

## 🧯 トラブル時の対処メモ

| 現象                                             | 原因                 | 対処方法                           |
| ---------------------------------------------- | ------------------ | ------------------------------ |
| `bash: cd: project: No such file or directory` | フォルダ名を間違えた／存在しない   | `ls`で確認して、正しいフォルダ名で`cd`する      |
| `Permission denied`                            | アクセス権がない           | 管理者権限でGit Bashを開く or 別の場所で作業する |
| 日本語名のフォルダで文字化け                                 | Git Bashの文字コードと不一致 | 半角英数の名前に変更するのが無難               |

---

## 📌 おすすめのショートカットコマンド（初心者向け）

| 操作                | コマンド or キー操作                            |
| ----------------- | --------------------------------------- |
| 前のコマンドに戻る         | ↑キーで履歴                                  |
| コピー＆ペースト          | Ctrl + Insert / Shift + Insert（右クリックも可） |
| 複数行まとめて貼り付け       | エディタで作成 → 右クリック貼り付け                     |
| 同じフォルダで新しいファイルを作る | `touch filename.py`                     |

---

## ✅ 練習タスク（Git Bashの練習問題）

1. デスクトップに「practice」フォルダを作る → `mkdir ~/Desktop/practice`
2. その中に「memo.txt」ファイルを作る → `touch memo.txt`
3. それを確認する → `ls -la`
4. 上の階層に戻る → `cd ..`

---

## 📘 まとめ：初心者が覚えるべき最低限のGit Bashコマンド

```bash
pwd          # 今どこにいるか確認
ls           # 中身を一覧表示
cd folder    # フォルダに移動
cd ..        # 一つ上に戻る
mkdir name   # フォルダを作成
touch file   # ファイルを作成
clear        # 画面をきれいにする
```

---

## 🎁 必要であれば：

* 上記内容を **PDF化チートシート** にして配布用に整理
* **画像つきステップ解説**や **動画化資料** も対応可能
* Git操作との連携編（Git Bash + Git の流れ）も用意可能

---

ご希望の形式（Notion／PDF／印刷用）などありましたら教えてください！
また、`Git BashでGitを使う編`（clone → add → commit → pushなど）もご希望あればお作りします。
